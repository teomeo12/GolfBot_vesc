
@inproceedings{DiCarlo_2018_DynamicLocomotion,
  title = {Dynamic {{Locomotion}} in the {{MIT Cheetah}} 3 {{Through Convex Model-Predictive Control}}},
  booktitle = {2018 {{IEEE}}/{{RSJ International Conference}} on {{Intelligent Robots}} and {{Systems}} ({{IROS}})},
  author = {Di Carlo, Jared and Wensing, Patrick M. and Katz, Benjamin and Bledt, Gerardo and Kim, Sangbae},
  year = {2018},
  month = oct,
  pages = {1--9},
  issn = {2153-0866},
  doi = {10.1109/IROS.2018.8594448},
  urldate = {2025-06-26},
  abstract = {This paper presents an implementation of model predictive control (MPC) to determine ground reaction forces for a torque-controlled quadruped robot. The robot dynamics are simplified to formulate the problem as convex optimization while still capturing the full 3D nature of the system. With the simplified model, ground reaction force planning problems are formulated for prediction horizons of up to 0.5 seconds, and are solved to optimality in under 1 ms at a rate of 20-30 Hz. Despite using a simplified model, the robot is capable of robust locomotion at a variety of speeds. Experimental results demonstrate control of gaits including stand, trot, flying-trot, pronk, bound, pace, a 3-legged gait, and a full 3D gallop. The robot achieved forward speeds of up to 3 m/s, lateral speeds up to 1 m/s, and angular speeds up to 180 deg/sec. Our approach is general enough to perform all these behaviors with the same set of gains and weights.},
  keywords = {Convex functions,Dynamics,Legged locomotion,Predictive control,Predictive models,Robot kinematics},
  file = {C\:\\Users\\James\\Zotero\\storage\\BELFXBUZ\\Di Carlo et al. - 2018 - Dynamic Locomotion in the MIT Cheetah 3 Through Co.pdf;C\:\\Users\\James\\Zotero\\storage\\6EL4TIQU\\8594448.html}
}

@misc{Sinnott_Haversine,
  author = {Sinnott, R. W.},
  title = {Virtues of the Haversine},
  journal = {Sky and Telescope},
  volume = {68},
  year = {1984},
  month = {aug},
  pages = {159},
  abstract = {The haversine formula is a very accurate way of computing distances between two points on the surface of a sphere using the latitude and longitude of the two points. The haversine formula is a better way of calculating distances as compared to the spherical law of cosines. This is because the spherical law of cosines uses the standard cosine function, which is not well-conditioned for small distances and angles. This results in large rounding errors when implemented in a computer program. The haversine function, on the other hand, uses the haversine function, which is a a function of the sine function. Because of this, it does not have the same problems with small angles and distances. To use the haversine function to find the distance between two points on a sphere, one must have the latitude and longitude of the two points.}
}
